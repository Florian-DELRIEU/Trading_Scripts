//@version=5
//script by Pax24

indicator('Pax24 MTF Ichimoku','Pichi MTF', true)

// ——————————————————————————————————— CONFIGURATION  ———————————————————————————————————
C00 = 'Original'
C01 = 'Aqua'
C02 = 'Black'
C03 = 'Blue'
C04 = 'Coral'
C05 = 'Gold'
C06 = 'Gray'
C07 = 'Green'
C08 = 'Lime'
C09 = 'Maroon'
C10 = 'Orange'
C11 = 'Pink'
C12 = 'Red'
C13 = 'Violet'
C14 = 'Yellow'
C15 = 'White'

group_base='Base parameters'
conversionPeriods = input.int(9, minval=1, title='Conversion Line Periods', group=group_base, tooltip='Standard = 9, 26, 52, 26\nCrypto = 10, 30, 60, 30')
basePeriods = input.int(26, minval=1, title='Base Line Periods', group=group_base)
laggingSpan2Periods = input.int(52, minval=1, title='Lagging Span 2 Periods', group=group_base)
displacement = input.int(26, minval=1, title='Displacement', group=group_base)
group1='Ichimoku View'
isActiveFirst = input(true, '──────── ichimoku ───────', group=group1, tooltip='Show or hide this ichimoku')
isActiveFirstTenkan = input(true, 'Tenkan', group=group1, tooltip='Show or hide this Tenkan')
isActiveFirstKijun = input(true, 'Kijun', group=group1, tooltip='Show or hide this Kijun')
isActiveFirstChikou = input(true, 'Chikou', group=group1, tooltip='Show or hide this Chikou')
isActiveFirstKumo = input(true, 'Kumo', group=group1, tooltip='Show or hide this Kumo')
isActiveFirstLabel = input(false, 'Label', group=group1, tooltip='Show or hide this Label')
labelFirstOffset = input.int(1, 'Offset', minval=0, maxval=20, inline='D', group=group1)
labelFirstColor = input.string(C00, 'Color', options=[C00, C01, C02, C03, C04, C05, C06, C07, C08, C09, C10, C11, C12, C13, C14, C15], inline='D', group=group1,tooltip='Offset and color for this Label')
group2='Ichimoku+1'
isActiveSecond = input(true, '──────── ichimoku +1 ───────', group=group2)
isActiveSecondTenkan = input(false, 'Tenkan', group=group2)
isActiveSecondKijun = input(true, 'Kijun', group=group2)
isActiveSecondChikou = input(false, 'Chikou', group=group2)
isActiveSecondKumo = input(true, 'Kumo', group=group2)
isActiveSecondLabel = input(true, 'Label', group=group2)
labelSecondOffset = input.int(2, 'Offset', minval=0, maxval=20, inline='D', group=group2)
labelSecondColor = input.string(C00, 'Color', options=[C00, C01, C02, C03, C04, C05, C06, C07, C08, C09, C10, C11, C12, C13, C14, C15], inline='D', group=group2)
group3='Ichimoku+2'
isActiveThird = input(true, '──────── ichimoku +2 ───────', group=group3)
isActiveThirdTenkan = input(false, 'Tenkan', group=group3)
isActiveThirdKijun = input(true, 'Kijun', group=group3)
isActiveThirdChikou = input(false, 'Chikou', group=group3)
isActiveThirdKumo = input(true, 'Kumo', group=group3)
isActiveThirdLabel = input(true, 'Label', group=group3)
labelThirdOffset = input.int(3, 'Offset', minval=0, maxval=20, inline='D', group=group3)
labelThirdColor = input.string(C00, 'Color', options=[C00, C01, C02, C03, C04, C05, C06, C07, C08, C09, C10, C11, C12, C13, C14, C15], inline='D', group=group3)
group4='Ichimoku+3'
isActiveFourth = input(true, '──────── ichimoku +3 ───────', group=group4)
isActiveFourthTenkan = input(false, 'Tenkan', group=group4)
isActiveFourthKijun = input(true, 'Kijun', group=group4)
isActiveFourthChikou = input(false, 'Chikou', group=group4)
isActiveFourthKumo = input(true, 'Kumo', group=group4)
isActiveFourthLabel = input(true, 'Label', group=group4)
labelFourthOffset = input.int(4, 'Offset', minval=0, maxval=20, inline='D', group=group4)
labelFourthColor = input.string(C00, 'Color', options=[C00, C01, C02, C03, C04, C05, C06, C07, C08, C09, C10, C11, C12, C13, C14, C15], inline='D', group=group4)

isActiveLabelAbbreviation = input(true, 'Label Abbreviation', group='Label', tooltip='Short label ie: Kj instead of Kijun')

changeIchi = input.bool(defval = false, title = "Fix Timeframe", group = "Timeframes", tooltip='Unchecked (default) = Adaptative ichimoku\nChecked = Fix the timeframe for each ichimoku')
pIchi = input.timeframe("", '► ichimoku', group = "Timeframes")
sIchi = input.timeframe("60", '► ichimoku+1', group = "Timeframes")
tIchi = input.timeframe("240", '► ichimoku+2', group = "Timeframes")
fIchi = input.timeframe("D", '► ichimoku+3', group = "Timeframes")
firstIchi = changeIchi ? pIchi : timeframe.period
secondIchi = changeIchi ? sIchi : timeframe.period=="60" or timeframe.period=="120" or timeframe.period=="180" or timeframe.period=="240" or timeframe.period=="360" or timeframe.period=="720" ? "W" : timeframe.period=="D" ? "W" : "60"
thirdIchi = changeIchi ? tIchi : timeframe.period=="1" or timeframe.period=="3" ? "5" : timeframe.period=="240" or timeframe.period=="360" or timeframe.period=="720" or timeframe.period=="D" or timeframe.period=="W" ? "M" : "240"
fourthIchi = changeIchi ? fIchi : timeframe.period=="1" or timeframe.period=="3" or timeframe.period=="5" ? "15" : timeframe.period=="D" ? "240" : "D"

// ————————————————————————————————————— CONSTANTS  —————————————————————————————————————
// ————— Ichimoku
tenkanPeriods = conversionPeriods
kijunPeriods = basePeriods
SSBPeriods = laggingSpan2Periods
displacementPeriods = displacement - 1
timeOffset = time - time[1]

// ————————————————————————————————————— FUNCTION  ——————————————————————————————————————
// ————— Converts color choice
f_stringInColor(_color) =>
    _color == 'Aqua' ? #0080FFef : _color == 'Black' ? #000000ef : _color == 'Blue' ? #013BCAef : _color == 'Coral' ? #FF8080ef : _color == 'Gold' ? #CCCC00ef : _color == 'Gray' ? #808080ef : _color == 'Green' ? #008000ef : _color == 'Lime' ? #00FF00ef : _color == 'Maroon' ? #800000ef : _color == 'Orange' ? #FF8000ef : _color == 'Pink' ? #FF0080ef : _color == 'Red' ? #FF0000ef : _color == 'Violet' ? #AA00FFef : _color == 'Yellow' ? #FFFF00ef : #FFFFFFff
// ————— Converts current resolution
f_resolutionInString(_res) =>
    _res == '1' ? '1m' : _res == '3' ? '3m' : _res == '5' ? '5m' : _res == '15' ? '15m' : _res == '30' ? '30m' : _res == '45' ? '45m' : _res == '60' ? '1h' : _res == '120' ? '2h' : _res == '180' ? '3h' : _res == '240' ? '4h' : _res == '360' ? '6h' : _res == '720' ? '12h' : _res == '1D' ? 'D' : _res == '1W' ? 'W' : _res == '1M' ? 'M' : _res
// ————— Returns the tenkan text
f_getTenkanText(_res, _isAbbreviation) =>
    tf = f_resolutionInString(_res)
    _isAbbreviation ? 'Tk ' + tf : 'Tenkan ' + tf
// ————— Returns the Kijun text
f_getKijunText(_res, _isAbbreviation) =>
    tf = f_resolutionInString(_res)
    _isAbbreviation ? 'Kj ' + tf : 'Kijun ' + tf
// ————— Returns the Chikou text
f_getChikouText(_res, _isAbbreviation) =>
    tf = f_resolutionInString(_res)
    _isAbbreviation ? 'Ck ' + tf : 'Chikou ' + tf
// ————— Converts current "timeframe.multiplier" plus the TF into minutes of type float.
f_resolutionInMinutes() =>
    timeframe.multiplier * (timeframe.isseconds ? 1. / 60. : timeframe.isminutes ? 1. : timeframe.isdaily ? 1440. : timeframe.isweekly ? 10080. : timeframe.ismonthly ? 43800. : na)
// ————— Returns resolution of _resolution period in minutes.
f_timeFrameResolutionInMinutes(_res) =>
    request.security(syminfo.tickerid, _res, f_resolutionInMinutes())
// ————— Returns the average number of current chart bars in the given target HTF resolution (this reflects the dataset's history).
f_avgDilationOf(_res) =>
    b = ta.barssince(ta.change(time(_res)))
    cumTotal = ta.cum(b == 0 ? b[1] + 1 : 0)
    cumCount = ta.cum(b == 0 ? 1 : 0)
    math.round(cumTotal / cumCount)
// ————— Returns the displacement of the resolution
f_getDisplacement(_res) =>
    f_avgDilationOf(_res) * displacementPeriods
// ————— Returns average value between lowest and highest
f_avgLH(_len) =>
    math.avg(ta.lowest(_len), ta.highest(_len))
// ————— Returns f_donchian data 
f_donchian(_tf, _src) =>
    request.security(syminfo.tickerid, _tf, _src, barmerge.gaps_off, barmerge.lookahead_on)
// ————— Returns ichimoku data for Current and MTF
f_ichimokuDataC(_isActive, _tf) =>
    _isShow = _isActive and f_timeFrameResolutionInMinutes(_tf) >= f_resolutionInMinutes()
    _displacement = f_getDisplacement(_tf)
    _tenkan = _isShow ? f_donchian(_tf, f_avgLH(tenkanPeriods)) : na
    _kijun = _isShow ? f_donchian(_tf, f_avgLH(kijunPeriods)) : na
    _chikou = _isShow ? f_donchian(_tf, close) : na
    _SSA = _isShow ? math.avg(_tenkan, _kijun) : na
    _SSB = _isShow ? f_donchian(_tf, f_avgLH(SSBPeriods)) : na
    _middleKumo = _isShow ? _SSA[0] > _SSB[0] ? _SSA[0] - math.abs(_SSA[0] - _SSB[0]) / 2 : _SSA[0] + math.abs(_SSA[0] - _SSB[0]) / 2 : na
    [_displacement, _tenkan, _kijun, _chikou, _SSA, _SSB, _middleKumo]
f_ichimokuData(_isActive, _tf) =>
    _isShow = _isActive and f_timeFrameResolutionInMinutes(_tf) > f_resolutionInMinutes()
    _displacement = f_getDisplacement(_tf)
    _tenkan = _isShow ? f_donchian(_tf, f_avgLH(tenkanPeriods)) : na
    _kijun = _isShow ? f_donchian(_tf, f_avgLH(kijunPeriods)) : na
    _chikou = _isShow ? f_donchian(_tf, close) : na
    _SSA = _isShow ? math.avg(_tenkan, _kijun) : na
    _SSB = _isShow ? f_donchian(_tf, f_avgLH(SSBPeriods)) : na
    _middleKumo = _isShow ? _SSA[0] > _SSB[0] ? _SSA[0] - math.abs(_SSA[0] - _SSB[0]) / 2 : _SSA[0] + math.abs(_SSA[0] - _SSB[0]) / 2 : na
    [_displacement, _tenkan, _kijun, _chikou, _SSA, _SSB, _middleKumo]

// ——————————————————————————————————— FIRST ICHIMOKU  ——————————————————————————————————
[firstDisplacement, firstTenkan, firstKijun, firstChikou, firstSSA, firstSSB, fisrtMiddleKumo] = f_ichimokuDataC(isActiveFirst, firstIchi)
// ————— Tenkan
plot(isActiveFirstTenkan ? firstTenkan : na, color=color.new(#2962ff, 0), title='Tenkan', linewidth=2)
// ————— Kijun
plot(isActiveFirstKijun ? firstKijun : na, color=color.new(#f23645, 0), title='Kijun', linewidth=2)
// ————— Chikou
plot(isActiveFirstChikou ? firstChikou : na, offset=-firstDisplacement, color=color.new(#5d606b, 0), title='Chikou')
// ————— SSA + SSB
ssaFirst = plot(isActiveFirstKumo ? firstSSA : na, offset=firstDisplacement, color=color.new(#a5d6a7, 0), title='SSA', linewidth=1)
ssbFirst = plot(isActiveFirstKumo ? firstSSB : na, offset=firstDisplacement, color=color.new(#faa1a4, 0), title='SSB', linewidth=1)
fill(ssaFirst, ssbFirst, color=firstSSA > firstSSB ? color.new(#4caf50,96) : color.new(#f23645,96), title='Kumo')

// ——————————————————————————————————— SECOND ICHIMOKU  —————————————————————————————————
[secondDisplacement, secondTenkan, secondKijun, secondChikou, secondSSA, secondSSB, secondMiddleKumo] = f_ichimokuData(isActiveSecond, secondIchi)
plot(isActiveSecondTenkan ? secondTenkan : na, color=color.new(#2962ff, 0), title='+1 Tenkan', linewidth=1)
plot(isActiveSecondKijun ? secondKijun : na, color=color.new(#ff9800, 0), title='+1 Kijun', linewidth=1)
plot(isActiveSecondChikou ? secondChikou : na, offset=-secondDisplacement, color=color.new(#b2b5be, 0), title='+1 Chikou')
ssaSecond = plot(isActiveSecondKumo ? secondSSA : na, offset=secondDisplacement, color=color.new(#ffcc80, 0), title='+1 SSA', linewidth=1, style=plot.style_circles)
ssbSecond = plot(isActiveSecondKumo ? secondSSB : na, offset=secondDisplacement, color=color.new(#ffcc80, 0), title='+1 SSB', linewidth=1, style=plot.style_circles)
fill(ssaSecond, ssbSecond, color=secondSSA > secondSSB ? color.new(#000000,99) : color.new(#010101,99), title='+1 Kumo')

// ——————————————————————————————————— THIRD ICHIMOKU  ——————————————————————————————————
[thirdDisplacement, thirdTenkan, thirdKijun, thirdChikou, thirdSSA, thirdSSB, thirdMiddleKumo] = f_ichimokuData(isActiveThird, thirdIchi)
plot(isActiveThirdTenkan ? thirdTenkan : na, color=color.new(#2962ff, 0), title='+2 Tenkan', linewidth=1)
plot(isActiveThirdKijun ? thirdKijun : na, color=color.new(#ab47bc, 0), title='+2 Kijun', linewidth=1)
plot(isActiveThirdChikou ? thirdChikou : na, offset=-thirdDisplacement, color=color.new(#b2b5be, 0), title='+2 Chikou')
ssaThird = plot(isActiveThirdKumo ? thirdSSA : na, offset=thirdDisplacement, color=color.new(#ce93d8, 0), title='+2 SSA', linewidth=1, style=plot.style_circles)
ssbThird = plot(isActiveThirdKumo ? thirdSSB : na, offset=thirdDisplacement, color=color.new(#ce93d8, 0), title='+2 SSB', linewidth=1, style=plot.style_circles)
fill(ssaThird, ssbThird, color=thirdSSA > thirdSSB ? color.new(#000000,99) : color.new(#010101,99), title='+2 Kumo')

// ————————————————————————————————— FOURTH ICHIMOKU  ———————————————————————————————————
[fourthDisplacement, fourthTenkan, fourthKijun, fourthChikou, fourthSSA, fourthSSB, fourthMiddleKumo] = f_ichimokuData(isActiveFourth, fourthIchi)
plot(isActiveFourthTenkan ? fourthTenkan : na, color=color.new(#2962ff, 0), title='+3 Tenkan', linewidth=1)
plot(isActiveFourthKijun ? fourthKijun : na, color=color.new(#80deea, 0), title='+3 Kijun', linewidth=1)
plot(isActiveFourthChikou ? fourthChikou : na, offset=-fourthDisplacement, color=color.new(#b2b5be, 0), title='+3 Chikou')
ssaFourth = plot(isActiveFourthKumo ? fourthSSA : na, offset=fourthDisplacement, color=color.new(#80deea, 0), title='+3 SSA', linewidth=1, style=plot.style_circles)
ssbFourth = plot(isActiveFourthKumo ? fourthSSB : na, offset=fourthDisplacement, color=color.new(#80deea, 0), title='+3 SSB', linewidth=1, style=plot.style_circles)
fill(ssaFourth, ssbFourth, color=fourthSSA > fourthSSB ? color.new(#000000,99) : color.new(#010101,99), title='+3 Kumo')

// ——————————————————————————————————————— LABEL ————————————————————————————————————————
var label firstTenkanLabel = na
var label firstKijunLabel = na
var label firstChikouLabel = na
var label firstKumoLabel = na

var label secondTenkanLabel = na
var label secondKijunLabel = na
var label secondChikouLabel = na
var label secondKumoLabel = na

var label thirdTenkanLabel = na
var label thirdKijunLabel = na
var label thirdChikouLabel = na
var label thirdKumoLabel = na

var label fourthTenkanLabel = na
var label fourthKijunLabel = na
var label fourthChikouLabel = na
var label fourthKumoLabel = na

label.delete(firstTenkanLabel)
label.delete(firstKijunLabel)
label.delete(firstChikouLabel)
label.delete(firstKumoLabel)

label.delete(secondTenkanLabel)
label.delete(secondKijunLabel)
label.delete(secondChikouLabel)
label.delete(secondKumoLabel)

label.delete(thirdTenkanLabel)
label.delete(thirdKijunLabel)
label.delete(thirdChikouLabel)
label.delete(thirdKumoLabel)

label.delete(fourthTenkanLabel)
label.delete(fourthKijunLabel)
label.delete(fourthChikouLabel)
label.delete(fourthKumoLabel)

if isActiveFirst and isActiveFirstLabel and f_timeFrameResolutionInMinutes(firstIchi) >= f_resolutionInMinutes()
    offsetLabelFirst = time + timeOffset * labelFirstOffset
    offsetFirst = labelFirstOffset < 0 ? labelFirstOffset : 0
    offsetDisplacementFirst = timeOffset * (firstDisplacement - labelFirstOffset)
    if isActiveFirstTenkan
        firstTenkanLabel := label.new(x=offsetLabelFirst, y=firstTenkan[offsetFirst], xloc=xloc.bar_time, style=label.style_none)
        label.set_text(firstTenkanLabel, f_getTenkanText(firstIchi, isActiveLabelAbbreviation))
        label.set_textcolor(firstTenkanLabel, labelFirstColor == 'Original' ? #f23645 : f_stringInColor(labelFirstColor))
    if isActiveFirstKijun
        firstKijunLabel := label.new(x=offsetLabelFirst, y=firstKijun[offsetFirst], xloc=xloc.bar_time, style=label.style_none)
        label.set_text(firstKijunLabel, f_getKijunText(firstIchi, isActiveLabelAbbreviation))
        label.set_textcolor(firstKijunLabel, labelFirstColor == 'Original' ? #f23645 : f_stringInColor(labelFirstColor))
    if isActiveFirstChikou
        firstChikouLabel := label.new(x=time - offsetDisplacementFirst, y=firstChikou[1], xloc=xloc.bar_time, style=label.style_none)
        label.set_text(firstChikouLabel, f_getChikouText(firstIchi, isActiveLabelAbbreviation))
        label.set_textcolor(firstChikouLabel, labelFirstColor == 'Original' ? #f23645 : f_stringInColor(labelFirstColor))
    if isActiveFirstKumo
        firstKumoLabel := label.new(x=time + offsetDisplacementFirst, y=fisrtMiddleKumo, xloc=xloc.bar_time, style=label.style_none)
        label.set_text(firstKumoLabel, 'Kumo ' + f_resolutionInString(firstIchi))
        label.set_textcolor(firstKumoLabel, labelFirstColor == 'Original' ? #f23645 : f_stringInColor(labelFirstColor))

if isActiveSecond and isActiveSecondLabel and f_timeFrameResolutionInMinutes(secondIchi) >= f_resolutionInMinutes()
    offsetLabelSecond = time + timeOffset * labelSecondOffset
    offsetSecond = labelSecondOffset < 0 ? labelSecondOffset : 0
    offsetDisplacementSecond = timeOffset * (secondDisplacement - labelSecondOffset)
    if isActiveSecondTenkan
        secondTenkanLabel := label.new(x=offsetLabelSecond, y=secondTenkan[offsetSecond], xloc=xloc.bar_time, style=label.style_none)
        label.set_text(secondTenkanLabel, f_getTenkanText(secondIchi, isActiveLabelAbbreviation))
        label.set_textcolor(secondTenkanLabel, labelSecondColor == 'Original' ? #ff9800 : f_stringInColor(labelSecondColor))
    if isActiveSecondKijun
        secondKijunLabel := label.new(x=offsetLabelSecond, y=secondKijun[offsetSecond], xloc=xloc.bar_time, style=label.style_none)
        label.set_text(secondKijunLabel, f_getKijunText(secondIchi, isActiveLabelAbbreviation))
        label.set_textcolor(secondKijunLabel, labelSecondColor == 'Original' ? #ff9800 : f_stringInColor(labelSecondColor))
    if isActiveSecondChikou
        secondChikouLabel := label.new(x=time - offsetDisplacementSecond, y=secondChikou[1], xloc=xloc.bar_time, style=label.style_none)
        label.set_text(secondChikouLabel, f_getChikouText(secondIchi, isActiveLabelAbbreviation))
        label.set_textcolor(secondChikouLabel, labelSecondColor == 'Original' ? #ff9800 : f_stringInColor(labelSecondColor))
    if isActiveSecondKumo
        secondKumoLabel := label.new(x=time + offsetDisplacementSecond, y=secondMiddleKumo, xloc=xloc.bar_time, style=label.style_none)
        label.set_text(secondKumoLabel, 'Kumo ' + f_resolutionInString(secondIchi))
        label.set_textcolor(secondKumoLabel, labelSecondColor == 'Original' ? #ff9800 : f_stringInColor(labelSecondColor))

if isActiveThird and isActiveThirdLabel and f_timeFrameResolutionInMinutes(thirdIchi) >= f_resolutionInMinutes()
    offsetLabelThird = time + timeOffset * labelThirdOffset
    offsetThird = labelThirdOffset < 0 ? labelThirdOffset : 0
    offsetDisplacementThird = timeOffset * (thirdDisplacement - labelThirdOffset)
    if isActiveThirdTenkan
        thirdTenkanLabel := label.new(x=offsetLabelThird, y=thirdTenkan[offsetThird], xloc=xloc.bar_time, style=label.style_none)
        label.set_text(thirdTenkanLabel, f_getTenkanText(thirdIchi, isActiveLabelAbbreviation))
        label.set_textcolor(thirdTenkanLabel, labelThirdColor == 'Original' ? #ab47bc : f_stringInColor(labelThirdColor))
    if isActiveThirdKijun
        thirdKijunLabel := label.new(x=offsetLabelThird, y=thirdKijun[offsetThird], xloc=xloc.bar_time, style=label.style_none)
        label.set_text(thirdKijunLabel, f_getKijunText(thirdIchi, isActiveLabelAbbreviation))
        label.set_textcolor(thirdKijunLabel, labelThirdColor == 'Original' ? #ab47bc : f_stringInColor(labelThirdColor))
    if isActiveThirdChikou
        thirdChikouLabel := label.new(x=time - offsetDisplacementThird, y=thirdChikou[1], xloc=xloc.bar_time, style=label.style_none)
        label.set_text(thirdChikouLabel, f_getChikouText(thirdIchi, isActiveLabelAbbreviation))
        label.set_textcolor(thirdChikouLabel, labelThirdColor == 'Original' ? #ab47bc : f_stringInColor(labelThirdColor))
    if isActiveThirdKumo
        thirdKumoLabel := label.new(x=time + offsetDisplacementThird, y=thirdMiddleKumo, xloc=xloc.bar_time, style=label.style_none)
        label.set_text(thirdKumoLabel, 'Kumo ' + f_resolutionInString(thirdIchi))
        label.set_textcolor(thirdKumoLabel, labelThirdColor == 'Original' ? #ab47bc : f_stringInColor(labelThirdColor))

if isActiveFourth and isActiveFourthLabel and f_timeFrameResolutionInMinutes(fourthIchi) >= f_resolutionInMinutes()
    offsetLabelFourth = time + timeOffset * labelFourthOffset
    offsetFourth = labelFourthOffset < 0 ? labelFourthOffset : 0
    offsetDisplacementFourth = timeOffset * (fourthDisplacement - labelFourthOffset)
    if isActiveFourthTenkan
        fourthTenkanLabel := label.new(x=offsetLabelFourth, y=fourthTenkan[offsetFourth], xloc=xloc.bar_time, style=label.style_none)
        label.set_text(fourthTenkanLabel, f_getTenkanText(fourthIchi, isActiveLabelAbbreviation))
        label.set_textcolor(fourthTenkanLabel, labelFourthColor == 'Original' ? #80deea : f_stringInColor(labelFourthColor))
    if isActiveFourthKijun
        fourthKijunLabel := label.new(x=offsetLabelFourth, y=fourthKijun[offsetFourth], xloc=xloc.bar_time, style=label.style_none)
        label.set_text(fourthKijunLabel, f_getKijunText(fourthIchi, isActiveLabelAbbreviation))
        label.set_textcolor(fourthKijunLabel, labelFourthColor == 'Original' ? #80deea : f_stringInColor(labelFourthColor))
    if isActiveFourthChikou
        fourthChikouLabel := label.new(x=time - offsetDisplacementFourth, y=fourthChikou[1], xloc=xloc.bar_time, style=label.style_none)
        label.set_text(fourthChikouLabel, f_getChikouText(fourthIchi, isActiveLabelAbbreviation))
        label.set_textcolor(fourthChikouLabel, labelFourthColor == 'Original' ? #80deea : f_stringInColor(labelFourthColor))
    if isActiveFourthKumo
        fourthKumoLabel := label.new(x=time + offsetDisplacementFourth, y=fourthMiddleKumo, xloc=xloc.bar_time, style=label.style_none)
        label.set_text(fourthKumoLabel, 'Kumo ' + f_resolutionInString(fourthIchi))
        label.set_textcolor(fourthKumoLabel, labelFourthColor == 'Original' ? #80deea : f_stringInColor(labelFourthColor))
